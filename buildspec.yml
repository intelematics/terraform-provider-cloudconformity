version: 0.2

"environmentVariables": [
  {
    "name": "PACKAGE",
    "value": "github.com/intelematics/terraform-provider-cloudconformity"
  },
  {
    "name": "GO_HOME",
    "value": "/go"
  },
  {
    "name": "IMAGE_REPO_NAME",
    "value": "terraform-provider-cloudconformity"
  },
  {
    "name": "IMAGE_TAG",
    "value": "latest"
  }
]

phases:
  install:
    commands:
      - echo CODEBUILD_SRC_DIR - $CODEBUILD_SRC_DIR
      - echo Create dir in GOPATH for sources...
      - mkdir -p $GO_HOME/src/$PACKAGE
      - echo Copy source files into GOPATH...
      - echo cp -a ${CODEBUILD_SRC_DIR}/.  $GO_HOME/src/$PACKAGE
      - cp -a ${CODEBUILD_SRC_DIR}/.  $GO_HOME/src/$PACKAGE
      - cd $GO_HOME/src/$PACKAGE
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Building the provider...
      - cd $GO_HOME/src/$PACKAGE && go build -o $GO_HOME/src/$PACKAGE/docker/terraform-provider-cloudconformity
      - cd docker
      - echo Building docker image...
      - docker build -t $IMAGE_REPO_NAME:IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME